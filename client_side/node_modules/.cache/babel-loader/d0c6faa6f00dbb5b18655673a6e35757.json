{"ast":null,"code":"var _jsxFileName = \"/home/ahrfry/Collab/client/src/components/users/users.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './users.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: [],\n      users: [],\n      projects: [],\n      areas: []\n    };\n  }\n\n  componentDidMount() {\n    const urls = ['http://localhost:3000/users/logged', 'http://localhost:3000/users', 'http://localhost:3000/users/projects', 'http://localhost:3000/areas/logged'];\n    let requests = urls.map(url => fetch(url));\n    Promise.all(requests).then(responses => {\n      return Promise.all(responses.map(response => response.json()));\n    }).then(responses => {\n      this.setState({\n        user: responses[0],\n        users: responses[1],\n        projects: responses[2],\n        areas: responses[3]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        fontcolor: 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mh-100\",\n          md: true,\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: require('./../images/user/rafael_oliveira.jpg')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"mh-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: this.state.user.map(user => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [user.first_name, \" \", user.last_name]\n                    }, user.id.toString() + user.first_name, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 49\n                    }, this)\n                  }, user.id.toString() + \"parent\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [user.degree, \" \", user.major]\n                    }, user.major, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: this.state.areas.map(areas => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: areas.name\n                  }, areas.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 45\n                  }, this)\n                }, areas.name + \"parent\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.state.users.map(users => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [users.first_name, \" \", users.last_name]\n            }, users.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), this.state.projects.map(projects => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [projects.name, \" \", projects.description]\n          }, projects.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 41\n          }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Users;","map":{"version":3,"names":["React","Component","Button","Card","Container","Row","Col","styles","Users","constructor","state","user","users","projects","areas","componentDidMount","urls","requests","map","url","fetch","Promise","all","then","responses","response","json","setState","render","fontcolor","require","first_name","last_name","id","toString","degree","major","name","description"],"sources":["/home/ahrfry/Collab/client/src/components/users/users.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {Button , Card , Container, Row, Col} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport styles from './users.css';\n\n\nclass Users extends Component {  \n    constructor(){\n        super();\n        this.state = {\n            user:[],\n            users: [],\n            projects: [],\n            areas: [],\n        }\n    }\n\n    componentDidMount(){\n        const urls = [\n            'http://localhost:3000/users/logged',\n            'http://localhost:3000/users',\n            'http://localhost:3000/users/projects',\n            'http://localhost:3000/areas/logged'\n\n        ]\n        let requests = urls.map((url) => fetch(url));\n        Promise.all(requests)\n            .then((responses) => {\n                return Promise.all(responses.map((response) => response.json()));\n            })\n            .then((responses) => {\n                this.setState({\n                    user : responses[0],\n                    users: responses[1],\n                    projects: responses[2],\n                    areas: responses[3]\n                });\n            });\n    \n    }\n\n    \n\n    render (){\n        return (\n           \n                <Container fluid style={{ fontcolor: 'black' }}>\n                    <Row >\n                        <Col className=\"mh-100\" md lg=\"2\">\n                            <Card >\n                                <Card.Img variant=\"top\" src={require('./../images/user/rafael_oliveira.jpg')} />\n                                <Card.Body className=\"mh-100\">\n                                    \n                                    <Card.Title>\n                                        {this.state.user.map(user =>\n                                        <>\n                                            <div key={user.id.toString()+\"parent\"}>\n                                                <p  key={user.id.toString()+user.first_name}>{user.first_name} {user.last_name}</p>\n                                                \n                                            </div>\n                                            <div>\n                                                <p key={user.major}>{user.degree} {user.major}</p>\n                                            </div>\n                                        </>     \n                                        )}\n                                    </Card.Title>\n                                    <Card.Text>\n                                        \n                                        {this.state.areas.map(areas =>\n                                        <div key={areas.name+\"parent\"}>\n                                            <p key={areas.name}>{areas.name}</p>\n                                        </div>\n                                    )}\n                                    </Card.Text>\n                                    \n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            \n                            <h2>Users</h2>\n                                <ul>\n                                    {this.state.users.map(users =>\n                                        <li key={users.id}>{users.first_name} {users.last_name}</li>    \n                                    )}\n                                </ul>\n                                    {this.state.projects.map(projects =>\n                                        <li key={projects.name}>{projects.name} {projects.description}</li>    \n                                    )}\n                                <ul>\n\n                            </ul>\n                                    \n                        </Col>\n                    </Row>\n                </Container>\n                \n                 \n                \n           \n        );\n    }  \n}\n\nexport default Users;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}