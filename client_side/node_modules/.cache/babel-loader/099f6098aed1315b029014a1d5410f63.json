{"ast":null,"code":"var _jsxFileName = \"/home/ahrfry/Collab/client_side/src/components/users/users.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './users.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: [],\n      users: [],\n      projects: [],\n      areas: [],\n      affinities: []\n    };\n  }\n\n  componentDidMount() {\n    const urls = ['http://localhost:3000/users/logged', 'http://localhost:3000/users', 'http://localhost:3000/users/projects', 'http://localhost:3000/areas/logged'];\n    let requests = urls.map(url => fetch(url));\n    Promise.all(requests).then(responses => {\n      return Promise.all(responses.map(response => response.json()));\n    }).then(responses => {\n      this.setState({\n        user: responses[0],\n        users: responses[1],\n        projects: responses[2],\n        areas: responses[3],\n        affinities: responses[4]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        fontcolor: 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"mh-100\",\n          md: true,\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: require('./../images/user/rafael_oliveira.jpg')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"mh-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: this.state.user.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    id: user.id.toString() + user.first_name,\n                    children: [user.first_name, \" \", user.last_name]\n                  }, user.id.toString() + user.first_name, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [user.degree, \" \", user.major]\n                  }, user.major, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 45\n                  }, this)]\n                }, user.id.toString() + user.first_name + \"parent\", true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: this.state.areas.map(areas => /*#__PURE__*/_jsxDEV(\"li\", {\n                  id: areas.name,\n                  children: areas.name\n                }, areas.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: true,\n          lg: \"5\",\n          children: this.state.affinities.map(affinity => /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: true,\n              lg: \"10\",\n              children: affinity.area_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: true,\n              lg: \"2\",\n              children: affinity.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Users;","map":{"version":3,"names":["React","Component","Button","Card","Container","Row","Col","styles","Users","constructor","state","user","users","projects","areas","affinities","componentDidMount","urls","requests","map","url","fetch","Promise","all","then","responses","response","json","setState","render","fontcolor","require","id","toString","first_name","last_name","degree","major","name","affinity","area_name","score"],"sources":["/home/ahrfry/Collab/client_side/src/components/users/users.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {Button , Card , Container, Row, Col} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport styles from './users.css';\n\n\nclass Users extends Component {  \n    constructor(){\n        super();\n        this.state = {\n            user:[],\n            users: [],\n            projects: [],\n            areas: [],\n            affinities: []\n        }\n\n    \n    }\n\n    componentDidMount(){\n        const urls = [\n            'http://localhost:3000/users/logged',\n            'http://localhost:3000/users',\n            'http://localhost:3000/users/projects',\n            'http://localhost:3000/areas/logged'\n\n        ]\n        let requests = urls.map((url) => fetch(url));\n        Promise.all(requests)\n            .then((responses) => {\n                return Promise.all(responses.map((response) => response.json()));\n            })\n            .then((responses) => {\n                this.setState({\n                    user : responses[0],\n                    users: responses[1],\n                    projects: responses[2],\n                    areas: responses[3],\n                    affinities: responses[4]\n                });\n            });\n    \n    }\n\n    \n\n    render (){\n        return (\n           \n                <Container fluid style={{ fontcolor: 'black' }}>\n                    <Row >\n                        <Col className=\"mh-100\" md lg=\"2\">\n                            <Card >\n                                <Card.Img variant=\"top\" src={require('./../images/user/rafael_oliveira.jpg')} />\n                                <Card.Body className=\"mh-100\">\n                                    \n                                    <Card.Title>\n                                        {this.state.user.map(user =>\n                                            <div key={user.id.toString()+user.first_name+\"parent\"}>\n                                            <p id={user.id.toString()+user.first_name} key={user.id.toString()+user.first_name}>{user.first_name} {user.last_name}</p>\n                                            <p key={user.major}>{user.degree} {user.major}</p>\n                                            </div>      \n                                        )}\n                                    </Card.Title>\n                                    <Card.Text>\n                                        \n                                        {this.state.areas.map(areas =>\n                                        \n                                        <li id={areas.name} key={areas.name}>{areas.name}</li>    \n                                    )}\n                                    </Card.Text>\n                                    \n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col md lg=\"5\">\n                            {this.state.affinities.map(affinity =>\n                                <Row>\n                                    <Col md lg={\"10\"}>\n                                        {affinity.area_name}\n                                    </Col>\n                                    <Col md lg={\"2\"}>\n                                        {affinity.score}\n\n                                    </Col>\n                                </Row>      \n                            )}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            \n                            \n                                    \n                        </Col>\n                    </Row>\n                </Container>\n                \n                 \n                \n           \n        );\n    }  \n}\n\nexport default Users;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}